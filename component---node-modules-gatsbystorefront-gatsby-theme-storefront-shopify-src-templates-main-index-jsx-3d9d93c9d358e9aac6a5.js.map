{"version":3,"sources":["webpack:///./node_modules/@gatsbystorefront/gatsby-theme-storefront-shopify/src/components/ShopifyBackgroundImage/index.jsx","webpack:///./node_modules/@gatsbystorefront/gatsby-theme-storefront-shopify/src/templates/main/MainPageCollectionBlock.jsx","webpack:///./node_modules/@gatsbystorefront/gatsby-theme-storefront-shopify/src/templates/main/MainPageProductBlock.jsx","webpack:///./node_modules/@gatsbystorefront/gatsby-theme-storefront-shopify/src/templates/main/MainPageCarousel.jsx","webpack:///./node_modules/@gatsbystorefront/gatsby-theme-storefront-shopify/src/templates/main/MainPageSection.jsx","webpack:///./node_modules/@gatsbystorefront/gatsby-theme-storefront-shopify/src/templates/main/MainPageFeaturedCollectionBlock.jsx","webpack:///./node_modules/@gatsbystorefront/gatsby-theme-storefront-shopify/src/templates/main/MainPage.jsx","webpack:///./node_modules/@gatsbystorefront/gatsby-theme-storefront-shopify/src/templates/main/index.jsx","webpack:///./node_modules/@gatsbystorefront/gatsby-theme-storefront-shopify/src/templates/catalog/CatalogProducts.jsx"],"names":["BgImage","styled","div","src","maxSize","getSizedImageUrl","ShopifyBackgroundImage","children","MainPageCollectionBlock","props","collection","title","description","image","shopifyThemePath","fields","block","textColor","textBgColor","buttonText","buttonTextColor","buttonBgColor","m","p","sx","justifyContent","alignItems","width","height","textAlign","to","color","textDecoration","as","fontSize","textTransform","name","mt","display","substrDescription","variant","bg","MainPageProductBlock","product","firstImage","descriptionSections","shortDescription","originalSrc","length","ariaNextButtonLabel","strings","ariaBackButtonLabel","MainPageCarousel","naturalSlideHeightMediaQuery","carousel","data","breakpoints","useThemeUI","theme","window","matchMedia","addEventListener","e","useState","matches","naturalSlideHeight","setNaturalSlideHeight","mx","px","position","maxWidth","naturalSlideWidth","totalSlides","isPlaying","infinite","map","slide","index","type","key","collections","nodes","handle","undefined","products","aria-label","bottom","left","border","py","ChevronLeft","right","ChevronRight","transform","MainPageSection","section","sectionItemsNumber","sectionHeight","flexWrap","filter","mb","backgroundPosition","MainPageFeaturedCollectionBlock","skip","cartUrl","limit","pt","style","CatalogProducts","MainPage","mainPage","useStaticQuery","site","siteMetadata","gatsbyStorefrontConfig","pageContext","isExpanded","feautiredCollections","forEach","node","pageTitleTemplate","store","storeName","storeDescription","Helmet","titleTemplate","defer","content","shopifyId"],"mappings":"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","file":"component---node-modules-gatsbystorefront-gatsby-theme-storefront-shopify-src-templates-main-index-jsx-3d9d93c9d358e9aac6a5.js","sourcesContent":["import React from 'react';\nimport { getSizedImageUrl } from '@shopify/theme-images';\nimport styled from '@emotion/styled';\n\nconst BgImage = styled.div`\n  width: 100%;\n  height: 100%;\n  background-position: 50% 0%;\n  background-repeat: no-repeat;\n  background-size: cover;\n  background-position-x: 50%;\n  background-position-y: 0%;\n\n  @media (-webkit-min-device-pixel-ratio: 1.3), (min-resolution: 120dpi) {\n    background-image: url(${({ src, maxSize }) =>\n      getSizedImageUrl(src, maxSize + 'x@2x')});\n  }\n\n  background-image: url(${({ src, maxSize }) =>\n    getSizedImageUrl(src, maxSize + 'x')});\n`;\n\nconst ShopifyBackgroundImage = ({ src, maxSize, children }) => {\n  return (\n    <BgImage src={src} maxSize={maxSize}>\n      {children}\n    </BgImage>\n  );\n};\n\nexport default ShopifyBackgroundImage;\n","/** @jsx jsx */\n/* eslint no-unused-vars: 0 */\nimport React from 'react';\nimport { Link as GatsbyLink } from 'gatsby';\nimport { jsx } from 'theme-ui';\nimport styled from '@emotion/styled/macro';\nimport { Flex, Box, Text, Heading, Button } from 'rebass';\n\nimport ShopifyBackgroundImage from '../../components/ShopifyBackgroundImage';\nimport substrDescription from '../../utils/substrDescription';\n\nconst MainPageCollectionBlock = (props) => {\n  const {\n    title,\n    description,\n    image,\n    fields: { shopifyThemePath },\n  } = props.collection;\n\n  const {\n    block,\n    textColor = 'primary',\n    textBgColor = 'white',\n    buttonText = 'Shop now',\n    buttonTextColor = 'primary',\n    buttonBgColor = 'white',\n  } = props;\n\n  return (\n    <ShopifyBackgroundImage src={image.src} maxSize=\"1300\">\n      <Flex\n        m=\"auto\"\n        p=\"1\"\n        sx={{\n          justifyContent: 'flex-start',\n          alignItems: 'stretch',\n          width: '100%',\n          height: '100%',\n        }}\n      >\n        <Box m=\"auto\" textAlign=\"center\">\n          <GatsbyLink\n            to={shopifyThemePath}\n            sx={{\n              color: textColor,\n              textAlign: 'center',\n              textDecoration: 'none',\n              ':hover,:focus,.active': {\n                color: textColor,\n                textDecoration: 'none',\n              },\n            }}\n          >\n            <Heading\n              as=\"h2\"\n              fontSize={[30, 36, 42]}\n              sx={{ textTransform: 'uppercase' }}\n            >\n              {block.name ? block.name : title}\n            </Heading>\n            <Text\n              fontSize={[1, 2, 3]}\n              mt=\"3\"\n              sx={{ display: ['none', 'block'] }}\n            >\n              {block.description\n                ? block.description\n                : substrDescription(description, 80)}\n            </Text>\n            <Button\n              variant=\"shopNow\"\n              sx={{\n                bg: buttonBgColor,\n                color: buttonTextColor,\n              }}\n            >\n              {buttonText}\n            </Button>\n          </GatsbyLink>\n        </Box>\n      </Flex>\n    </ShopifyBackgroundImage>\n  );\n};\n\nexport default MainPageCollectionBlock;\n","/** @jsx jsx */\nimport React from 'react';\nimport { Link as GatsbyLink } from 'gatsby';\nimport { jsx } from 'theme-ui';\nimport { Flex, Box, Text, Heading, Button } from 'rebass';\n\nimport ShopifyBackgroundImage from '../../components/ShopifyBackgroundImage';\nimport substrDescription from '../../utils/substrDescription';\n\nconst MainPageProductBlock = (props) => {\n  const {\n    title,\n    description,\n    fields: {\n      shopifyThemePath,\n      firstImage,\n      descriptionSections,\n      shortDescription,\n    },\n  } = props.product;\n\n  const {\n    block,\n    textColor = 'primary',\n    textBgColor = 'white',\n    buttonText = 'Shop now',\n    buttonTextColor = 'primary',\n    buttonBgColor = 'white',\n  } = props;\n\n  return (\n    <ShopifyBackgroundImage src={firstImage.originalSrc} maxSize=\"400\">\n      <Flex\n        m=\"auto\"\n        p=\"1\"\n        sx={{\n          justifyContent: 'flex-start',\n          alignItems: 'stretch',\n          width: '100%',\n          height: '100%',\n        }}\n      >\n        <Box m=\"auto\" textAlign=\"center\">\n          <GatsbyLink\n            to={shopifyThemePath}\n            sx={{\n              color: textColor,\n              textAlign: 'center',\n              textDecoration: 'none',\n              ':hover,:focus,.active': {\n                color: textColor,\n                textDecoration: 'none',\n              },\n            }}\n          >\n            <Heading\n              as=\"h2\"\n              fontSize={[30, 36, 42]}\n              sx={{ textTransform: 'uppercase' }}\n            >\n              {block.name ? block.name : substrDescription(title, 30)}\n            </Heading>\n            <Text fontSize={[1, 2, 3]} sx={{ display: ['none', 'block'] }}>\n              {block.description ? (\n                block.description\n              ) : (\n                <>\n                  {!descriptionSections || descriptionSections.length > 0 ? (\n                    <>\n                      {shortDescription\n                        ? substrDescription(shortDescription, 80)\n                        : ''}\n                    </>\n                  ) : (\n                    <>\n                      {shortDescription\n                        ? substrDescription(shortDescription, 80)\n                        : substrDescription(description, 80)}\n                    </>\n                  )}\n                </>\n              )}\n            </Text>\n            <Button\n              variant=\"shopNow\"\n              sx={{\n                bg: buttonBgColor,\n                color: buttonTextColor,\n              }}\n            >\n              {buttonText}\n            </Button>\n          </GatsbyLink>\n        </Box>\n      </Flex>\n    </ShopifyBackgroundImage>\n  );\n};\n\nexport default MainPageProductBlock;\n","/** @jsx jsx */\n/* eslint no-unused-vars: 0 */\nimport React, { useState } from 'react';\nimport { jsx, useThemeUI } from 'theme-ui';\nimport { Box } from 'rebass';\nimport {\n  CarouselProvider,\n  Slider,\n  Slide,\n  ButtonBack,\n  ButtonNext,\n  DotGroup,\n} from 'pure-react-carousel';\nimport 'pure-react-carousel/dist/react-carousel.es.css';\nimport './carousel.css';\n\nimport MainPageCollectionBlock from './MainPageCollectionBlock';\nimport MainPageProductBlock from './MainPageProductBlock';\nimport ChevronLeft from '../../components/Icons/ChevronLeft';\nimport ChevronRight from '../../components/Icons/ChevronRight';\nimport strings from './strings.json';\n\nconst { ariaNextButtonLabel, ariaBackButtonLabel } = strings;\n\nconst MainPageCarousel = (props) => {\n  const { carousel, data } = props;\n\n  const {\n    theme: { breakpoints },\n  } = useThemeUI();\n\n  let naturalSlideHeightMediaQuery;\n\n  if (typeof window !== `undefined`) {\n    naturalSlideHeightMediaQuery =\n      window && window.matchMedia(`(max-width: ${breakpoints[1]})`);\n    naturalSlideHeightMediaQuery.addEventListener('change', (e) => {});\n  }\n\n  const [naturalSlideHeight, setNaturalSlideHeight] = useState(\n    naturalSlideHeightMediaQuery && naturalSlideHeightMediaQuery.matches\n      ? 100\n      : 60\n  );\n\n  if (typeof window !== `undefined`) {\n    naturalSlideHeightMediaQuery.addEventListener('change', (e) => {\n      setNaturalSlideHeight(e.matches ? 100 : 60);\n    });\n  }\n\n  return (\n    <Box\n      mx={2}\n      px={1}\n      sx={{\n        position: 'relative',\n        textAlign: 'center',\n        display: ['none', 'block'],\n        maxWidth: 1300,\n      }}\n    >\n      <CarouselProvider\n        naturalSlideWidth={100}\n        naturalSlideHeight={naturalSlideHeight}\n        totalSlides={carousel.children.length}\n        isPlaying\n        infinite\n      >\n        <Slider>\n          {carousel.children.map((slide, index) => {\n            if (slide.type === 'collection') {\n              return (\n                <Slide key={index} index={index}>\n                  {data.collections.nodes.map((collection, index) => {\n                    if (collection.handle === slide.handle) {\n                      return (\n                        <MainPageCollectionBlock\n                          block={slide}\n                          collection={collection}\n                          key={index}\n                          textColor={\n                            slide.textColor ? slide.textColor : undefined\n                          }\n                          textBgColor={\n                            slide.textBgColor ? slide.textBgColor : undefined\n                          }\n                          buttonText={\n                            slide.buttonText ? slide.buttonText : undefined\n                          }\n                          buttonTextColor={\n                            slide.buttonTextColor\n                              ? slide.buttonTextColor\n                              : undefined\n                          }\n                          buttonBgColor={\n                            slide.buttonBgColor\n                              ? slide.buttonBgColor\n                              : undefined\n                          }\n                        />\n                      );\n                    } else {\n                      return '';\n                    }\n                  })}\n                </Slide>\n              );\n            } else if (slide.type === 'product') {\n              return (\n                <Slide key={index} index={index}>\n                  {data.products.nodes.map((product, index) => {\n                    if (product.handle === slide.handle) {\n                      return (\n                        <MainPageProductBlock\n                          block={slide}\n                          product={product}\n                          key={index}\n                          textColor={slide.textColor}\n                          textBgColor={slide.textBgColor}\n                        />\n                      );\n                    } else {\n                      return '';\n                    }\n                  })}\n                </Slide>\n              );\n            } else {\n              return '';\n            }\n          })}\n        </Slider>\n\n        <ButtonBack\n          aria-label={ariaBackButtonLabel}\n          sx={{\n            display: ['none', 'block'],\n            position: 'absolute',\n            bottom: ['36%', '50%'],\n            left: 1,\n            'z-index': '2',\n            border: 0,\n            bg: 'transparent',\n            color: 'primary',\n            py: 2,\n            px: [0, 3],\n          }}\n        >\n          <ChevronLeft width=\"40px\" height=\"40px\" />\n        </ButtonBack>\n\n        <ButtonNext\n          aria-label={ariaNextButtonLabel}\n          sx={{\n            display: ['none', 'block'],\n            position: 'absolute',\n            bottom: ['36%', '50%'],\n            right: 1,\n            'z-index': '2',\n            border: 0,\n            bg: 'transparent',\n            color: 'primary',\n            py: 2,\n            px: [0, 3],\n          }}\n        >\n          <ChevronRight width=\"40px\" height=\"40px\" />\n        </ButtonNext>\n\n        <DotGroup\n          sx={{\n            display: ['none', 'block'],\n            position: 'absolute',\n            bottom: '10%',\n            left: '50%',\n            transform: 'translate(-50%)',\n            'z-index': '2',\n            border: 0,\n            bg: 'transparent',\n            color: 'primary',\n            py: '2',\n            px: '3',\n          }}\n        />\n      </CarouselProvider>\n    </Box>\n  );\n};\n\nexport default MainPageCarousel;\n","/** @jsx jsx */\n\nimport React from 'react';\nimport { jsx } from 'theme-ui';\nimport { Flex, Box } from 'rebass';\n\nimport MainPageCollectionBlock from './MainPageCollectionBlock';\nimport MainPageProductBlock from './MainPageProductBlock';\n\nconst MainPageSection = (props) => {\n  const { section, data } = props;\n  const sectionItemsNumber =\n    section && section.children && section.children.length > 0\n      ? section.children.length\n      : 1;\n  const sectionHeight = sectionItemsNumber < 3 ? '60vh' : '40vh';\n\n  return (\n    <Box maxWidth={1300} mx=\"auto\">\n      <Flex flexWrap=\"wrap\" mx={2}>\n        {section.children.map((block, index) => {\n          if (\n            block.type === 'collection' &&\n            data.collections.nodes.filter(\n              (collection) => collection.handle === block.handle\n            )[0]\n          ) {\n            return (\n              <Box\n                width={[1, 1 / sectionItemsNumber]}\n                key={index}\n                height={['60vh', sectionHeight]}\n                p={1}\n                mb={[3, 0]}\n              >\n                <MainPageCollectionBlock\n                  block={block}\n                  collection={\n                    data.collections.nodes.filter(\n                      (collection) => collection.handle === block.handle\n                    )[0]\n                  }\n                  textColor={block.textColor ? block.textColor : undefined}\n                  textBgColor={\n                    block.textBgColor ? block.textBgColor : undefined\n                  }\n                  buttonText={block.buttonText ? block.buttonText : undefined}\n                  buttonTextColor={\n                    block.buttonTextColor ? block.buttonTextColor : undefined\n                  }\n                  buttonBgColor={\n                    block.buttonBgColor ? block.buttonBgColor : undefined\n                  }\n                  backgroundPosition=\"50% 0%\"\n                />\n              </Box>\n            );\n          } else if (\n            block.type === 'product' &&\n            data.products.nodes.filter(\n              (product) => product.handle === block.handle\n            )[0]\n          ) {\n            return (\n              <Box\n                width={[1, 1 / sectionItemsNumber]}\n                key={index}\n                height={['60vh', sectionHeight]}\n                p={1}\n                mb={[3, 0]}\n              >\n                <MainPageProductBlock\n                  block={block}\n                  product={\n                    data.products.nodes.filter(\n                      (product) => product.handle === block.handle\n                    )[0]\n                  }\n                  textColor={block.textColor ? block.textColor : undefined}\n                  textBgColor={\n                    block.textBgColor ? block.textBgColor : undefined\n                  }\n                  buttonText={block.buttonText ? block.buttonText : undefined}\n                  buttonTextColor={\n                    block.buttonTextColor ? block.buttonTextColor : undefined\n                  }\n                  buttonBgColor={\n                    block.buttonBgColor ? block.buttonBgColor : undefined\n                  }\n                  backgroundPosition=\"50% 0%\"\n                />\n              </Box>\n            );\n          } else {\n            return '';\n          }\n        })}\n      </Flex>\n    </Box>\n  );\n};\n\nexport default MainPageSection;\n","import React from 'react';\nimport { Flex, Box, Heading, Text } from 'rebass';\n\nimport CatalogProducts from '../catalog/CatalogProducts';\n\nconst MainPageFeaturedCollectionBlock = ({\n  block,\n  products,\n  skip = 0,\n  cartUrl,\n}) => {\n  const { name, description, limit = 3 } = block;\n  return (\n    <Box pt={3} mx=\"auto\" style={{ maxWidth: 1300 }}>\n      <Heading\n        as=\"h3\"\n        fontSize={[30, 36, 42]}\n        sx={{ textTransform: 'uppercase' }}\n        textAlign=\"center\"\n      >\n        {name}\n      </Heading>\n      <Text\n        fontSize={[1, 2, 3]}\n        sx={{ textTransform: 'uppercase' }}\n        textAlign=\"center\"\n      >\n        {description}\n      </Text>\n      <Flex flexWrap=\"wrap\">\n        <CatalogProducts\n          products={products}\n          limit={limit || 3}\n          skip={skip}\n          cartUrl={cartUrl}\n        />\n      </Flex>\n    </Box>\n  );\n};\n\nexport default MainPageFeaturedCollectionBlock;\n","import React from 'react';\nimport { Box } from 'rebass';\nimport { useStaticQuery, graphql } from 'gatsby';\n\nimport MainPageCarousel from './MainPageCarousel';\nimport MainPageSection from './MainPageSection';\nimport MainPageFeaturedCollectionBlock from './MainPageFeaturedCollectionBlock';\n\nconst MainPage = (props) => {\n  const dataQuery = useStaticQuery(graphql`\n    query MainPageStaticQuery {\n      site {\n        siteMetadata {\n          gatsbyStorefrontConfig {\n            mainPage {\n              handle\n              type\n              name\n              description\n              limit\n              isExpanded\n              textBgColor\n              textColor\n              buttonText\n              buttonTextColor\n              buttonBgColor\n              children {\n                handle\n                type\n                name\n                description\n                limit\n                isExpanded\n                textBgColor\n                textColor\n                buttonText\n                buttonTextColor\n                buttonBgColor\n              }\n            }\n          }\n        }\n      }\n    }\n  `);\n\n  const { mainPage } = dataQuery.site.siteMetadata.gatsbyStorefrontConfig;\n\n  const { data } = props;\n\n  const { cartUrl } = props.pageContext;\n\n  return (\n    <Box px={2} pt={3} mx=\"auto\" style={{ maxWidth: 1300 }}>\n      {mainPage.map((block, index) => {\n        if (block.type === 'carousel') {\n          return (\n            <Box width={1} mb={1} key={index}>\n              <MainPageCarousel carousel={block} data={data} />\n            </Box>\n          );\n        } else if (block.type === 'section') {\n          return (\n            <Box width={1} mb={1} key={index}>\n              <MainPageSection section={block} data={data} />\n            </Box>\n          );\n        } else if (\n          block.type === 'product' ||\n          (block.type === 'collection' && block.isExpanded === false)\n        ) {\n          return (\n            <Box width={1} mb={1} key={index}>\n              <MainPageSection section={{ children: [block] }} data={data} />\n            </Box>\n          );\n        } else if (block.type === 'collection' && block.isExpanded == true) {\n          let products = [];\n          props.data.feautiredCollections.nodes.forEach((node) => {\n            if (node.handle === block.handle) {\n              products = [...products, ...node.products];\n            }\n          });\n          return (\n            <MainPageFeaturedCollectionBlock\n              block={block}\n              products={products}\n              cartUrl={cartUrl}\n              key={index}\n            />\n          );\n        } else if (block.type === 'header') {\n          return '';\n        } else {\n          return '';\n        }\n      })}\n    </Box>\n  );\n};\n\nexport default MainPage;\n","/* eslint react/jsx-props-no-spreading: \"off\" */\nimport React from 'react';\nimport { Helmet } from 'react-helmet';\nimport { graphql } from 'gatsby';\n\nimport MainPage from './MainPage';\nimport strings from './strings.json';\n\nconst { pageTitleTemplate } = strings;\n\nexport default (props) => {\n  const {\n    storeName,\n    storeDescription,\n  } = props.data.store.siteMetadata.gatsbyStorefrontConfig;\n\n  return (\n    <>\n      <Helmet title={storeName} titleTemplate={pageTitleTemplate} defer={false}>\n        <meta name=\"description\" content={storeDescription} />\n      </Helmet>\n      <MainPage {...props} />\n    </>\n  );\n};\n\nexport const mainPageQuery = graphql`\n  query MainPageQuery(\n    $handles: [String]\n    $featuredCollectionsHandles: [String]\n  ) {\n    collections: allShopifyCollection(filter: { handle: { in: $handles } }) {\n      nodes {\n        handle\n        title\n        description\n        fields {\n          shopifyThemePath\n        }\n        image {\n          src\n          localFile {\n            childImageSharp {\n              resize(base64: true) {\n                src\n                width\n                height\n                aspectRatio\n              }\n            }\n          }\n        }\n      }\n    }\n\n    feautiredCollections: allShopifyCollection(\n      filter: { handle: { in: $featuredCollectionsHandles } }\n    ) {\n      nodes {\n        title\n        handle\n        description\n        products {\n          id\n          shopifyId\n          title\n          tags\n          fields {\n            shopifyThemePath\n            firstImage {\n              altText\n              originalSrc\n              localFile {\n                childImageSharp {\n                  resize(base64: true) {\n                    src\n                    width\n                    height\n                    aspectRatio\n                  }\n                }\n              }\n            }\n          }\n          availableForSale\n          priceRange {\n            minVariantPrice {\n              amount\n              currencyCode\n            }\n            maxVariantPrice {\n              amount\n              currencyCode\n            }\n          }\n          variants {\n            shopifyId\n            availableForSale\n            compareAtPrice\n            price\n          }\n        }\n      }\n    }\n\n    products: allShopifyProduct(filter: { handle: { in: $handles } }) {\n      nodes {\n        title\n        description\n        handle\n        fields {\n          shopifyThemePath\n          firstImage {\n            altText\n            originalSrc\n            localFile {\n              childImageSharp {\n                resize(base64: true) {\n                  src\n                  width\n                  height\n                  aspectRatio\n                }\n              }\n            }\n          }\n          descriptionSections {\n            id\n          }\n          shortDescription\n        }\n      }\n    }\n\n    store: site {\n      siteMetadata {\n        gatsbyStorefrontConfig {\n          storeName\n          storeDescription\n        }\n      }\n    }\n  }\n`;\n","import React from 'react';\nimport { Box } from 'rebass';\n\n// import IndividualProduct from './IndividualProduct';\nimport IndividualProduct from './IndividualProductAnimated';\n\nconst CatalogProducts = ({ products, limit, skip, cartUrl }) => {\n  return (\n    <>\n      {products.map((product, index) => {\n        product.cartUrl = cartUrl;\n        if (index + 1 > skip && index + 1 <= skip + limit) {\n          return (\n            <Box width={[1, 1 / 4]} key={index}>\n              <IndividualProduct key={product.shopifyId} product={product} />\n            </Box>\n          );\n        } else {\n          return '';\n        }\n      })}\n    </>\n  );\n};\n\nexport default CatalogProducts;\n"],"sourceRoot":""}