{"version":3,"sources":["webpack:///./node_modules/@gatsbystorefront/gatsby-theme-storefront-shopify/src/components/Pagination/index.jsx","webpack:///./node_modules/@gatsbystorefront/gatsby-theme-storefront-shopify/src/templates/catalog/CatalogPage.jsx","webpack:///./node_modules/@gatsbystorefront/gatsby-theme-storefront-shopify/src/templates/catalog/index.jsx","webpack:///./node_modules/@gatsbystorefront/gatsby-theme-storefront-shopify/src/templates/catalog/CatalogProducts.jsx"],"names":["Pagination","props","numPages","currentPage","shopifyThemePath","prevLink","nextLink","justifyContent","fontSize","sx","position","borderTopWidth","borderTopStyle","borderTopColor","borderBottomWidth","borderBottomStyle","borderBottomColor","as","GatsbyLink","to","rel","variant","margin","height","left","m","opacity","Array","from","length","map","_","i","link","pageNum","Math","max","min","mx","key","right","CatalogPage","pageContext","limit","skip","cartUrl","data","collection","nodes","title","description","products","forEach","node","flexWrap","background","width","alignItems","textAlign","py","px","fontWeight","flexDirection","bg","mt","p","CatalogProducts","storeName","store","siteMetadata","gatsbyStorefrontConfig","Helmet","titleTemplate","defer","name","content","product","index","shopifyId"],"mappings":"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","file":"component---node-modules-gatsbystorefront-gatsby-theme-storefront-shopify-src-templates-catalog-index-jsx-7c4f483df35c23667f31.js","sourcesContent":["import React, { Fragment } from 'react';\nimport GatsbyLink from 'gatsby-link';\nimport { Flex, Button } from 'rebass';\n\nconst Pagination = props => {\n  const { numPages, currentPage, shopifyThemePath } = props;\n  const showNumbers = 2;\n\n  let prevLink = false;\n  let nextLink = false;\n\n  if (currentPage !== 1) {\n    prevLink = shopifyThemePath + '/' + (currentPage - 1);\n  }\n  if (currentPage === 2) {\n    prevLink = shopifyThemePath;\n  }\n  if (currentPage !== numPages) {\n    nextLink = shopifyThemePath + '/' + (currentPage + 1);\n  }\n\n  return (\n    <Fragment>\n      {numPages >= 1 ? (\n        <Flex justifyContent=\"center\"\n          fontSize=\"inherit\"\n          sx={{\n            position: 'relative',\n            borderTopWidth: '1px',\n            borderTopStyle: 'solid',\n            borderTopColor: 'grey',\n            borderBottomWidth: '1px',\n            borderBottomStyle: 'solid',\n            borderBottomColor: 'grey',\n          }}\n        >\n          {prevLink ? (\n            <Button\n              as={GatsbyLink}\n              to={prevLink}\n              rel=\"prev\"\n              variant=\"pagination\"\n              sx={{ position: 'absolute', margin: 'auto', height: '100%', left: 0 }}\n            >\n              {'Previous'}\n            </Button>\n          ) : (\n            <Button\n              m=\"auto\"\n              variant=\"pagination\"\n              sx={{ position: 'absolute', opacity: '.3', height: '100%', left: 0 }}\n            >\n              {'Previous'}\n            </Button>\n          )}\n          {Array.from({ length: numPages }).map((_, i) => {\n            let pageNum = i + 1;\n\n            if (\n              pageNum >= Math.max(1, currentPage - showNumbers) &&\n              pageNum <= Math.min(currentPage + showNumbers, numPages)\n            ) {\n              if (pageNum === currentPage) {\n                return (\n                  <Button mx={2} variant=\"pagination-active\" key={pageNum}>\n                    {pageNum}\n                  </Button>\n                );\n              } else {\n                let link;\n                pageNum === 1\n                  ? (link = shopifyThemePath)\n                  : (link = shopifyThemePath + '/' + pageNum);\n                return (\n                  <Button\n                    as={GatsbyLink}\n                    to={link}\n                    mx={2}\n                    variant=\"pagination\"\n                    key={pageNum}\n                  >\n                    {pageNum}\n                  </Button>\n                );\n              }\n            } else {\n              return '';\n            }\n          })}\n          {nextLink ? (\n            <Button\n              as={GatsbyLink}\n              to={nextLink}\n              rel=\"next\"\n              variant=\"pagination\"\n              sx={{ position: 'absolute', margin: 'auto', height: '100%', right: 0 }}\n            >\n              {'Next'}\n            </Button>\n          ) : (\n            <Button\n              m=\"auto\"\n              variant=\"pagination\"\n              sx={{ position: 'absolute', opacity: '.3', height: '100%', right: 0 }}\n            >\n              {'Next'}\n            </Button>\n          )}\n        </Flex>\n      ) : (\n        ''\n      )}\n    </Fragment>\n  );\n};\n\nexport default Pagination;\n","import React from 'react';\nimport { Flex, Box, Heading, Text } from 'rebass';\n\nimport CatalogProducts from './CatalogProducts';\nimport Pagination from '../../components/Pagination';\nimport CollectionStats from '../../components/CollectionStats';\n\nfunction CatalogPage(props) {\n  const { limit, skip, cartUrl } = props.pageContext;\n  const { title, description } = props.data.collection.nodes[0];\n  let products = [];\n\n  props.data.collection.nodes.forEach((node) => {\n    products = [...products, ...node.products];\n  });\n\n  return (\n    <Flex flexWrap=\"wrap\" mx=\"auto\" sx={{ background: 'url(\"//cdn.shopify.com/s/files/1/0117/9005/7534/files/bg-face.jpg\")' }}>\n      <Flex\n        width={1}\n        flexWrap={['wrap', 'nowrap']}\n        justifyContent=\"space-between\"\n        alignItems=\"flex-end\"\n      >\n        <Box textAlign=\"center\" py=\"2em\" px={[\"2em\", \"6em\", \"14em\"]}>\n          <Text fontSize={[\"10vw\", \"5vw\"]} fontWeight=\"light\">{title}</Text>\n          <Text>{description}</Text>\n        </Box>\n\n        {/*\n        <Text\n          textAlign={['center', 'right']}\n          width={['100%', 'auto']}\n          pt={1}\n          fontSize={[1, 2, 3]}\n        >\n          <CollectionStats\n            limit={limit}\n            skip={skip}\n            productsNum={products.length}\n          />\n        </Text>\n        */}\n      </Flex>\n      <Flex flexDirection=\"column\" bg=\"background\" mt={\"1em\"} p={[\"5vw\", \"3.5vw\"]}>\n        <Flex flexDirection={[\"column\", \"row\"]}>\n          <CatalogProducts\n            products={products}\n            limit={limit}\n            skip={skip}\n            cartUrl={cartUrl}\n          />\n        </Flex>\n        <Box width={1} key=\"pagination\">\n          <Text textAlign=\"center\">\n            <Pagination {...props.pageContext} />\n          </Text>\n        </Box>\n      </Flex>\n    </Flex>\n  );\n}\n\nexport default CatalogPage;\n","import React from 'react';\nimport { graphql } from 'gatsby';\nimport { Helmet } from 'react-helmet';\n\nimport CatalogPage from './CatalogPage';\n\nexport default (props) => {\n  const { title, description } = props.data.collection.nodes[0];\n  const { storeName } = props.data.store.siteMetadata.gatsbyStorefrontConfig;\n  return (\n    <>\n      <Helmet title={title} titleTemplate={`%s â€” ${storeName}`} defer={false}>\n        <meta name=\"description\" content={description} />\n      </Helmet>\n      <CatalogPage {...props} />\n    </>\n  );\n};\n\nexport const catalogQuery = graphql`\n  query CatalogQuery($handle: String) {\n    collection: allShopifyCollection(filter: { handle: { eq: $handle } }) {\n      nodes {\n        title\n        handle\n        description\n        products {\n          id\n          shopifyId\n          title\n          tags\n          fields {\n            shopifyThemePath\n            firstImage {\n              altText\n              originalSrc\n              localFile {\n                childImageSharp {\n                  resize(base64: true) {\n                    src\n                    width\n                    height\n                    aspectRatio\n                  }\n                }\n              }\n            }\n          }\n          availableForSale\n          priceRange {\n            minVariantPrice {\n              amount\n              currencyCode\n            }\n            maxVariantPrice {\n              amount\n              currencyCode\n            }\n          }\n          variants {\n            shopifyId\n            availableForSale\n            compareAtPrice\n            price\n          }\n        }\n      }\n    }\n    store: site {\n      siteMetadata {\n        gatsbyStorefrontConfig {\n          storeName\n        }\n      }\n    }\n  }\n`;\n","import React from 'react';\nimport { Box } from 'rebass';\n\n// import IndividualProduct from './IndividualProduct';\nimport IndividualProduct from './IndividualProductAnimated';\n\nconst CatalogProducts = ({ products, limit, skip, cartUrl }) => {\n  return (\n    <>\n      {products.map((product, index) => {\n        product.cartUrl = cartUrl;\n        if (index + 1 > skip && index + 1 <= skip + limit) {\n          return (\n            <Box width={[1, 1 / 4]} key={index}>\n              <IndividualProduct key={product.shopifyId} product={product} />\n            </Box>\n          );\n        } else {\n          return '';\n        }\n      })}\n    </>\n  );\n};\n\nexport default CatalogProducts;\n"],"sourceRoot":""}